IF OBJECT_ID('MENSAGEM', 'U') IS NOT NULL
	DROP TABLE MENSAGEM
IF OBJECT_ID('ENTREGA', 'U') IS NOT NULL
	DROP TABLE ENTREGA
IF OBJECT_ID('ATIVIDADE_VINCULADA', 'U') IS NOT NULL
	DROP TABLE ATIVIDADE_VINCULADA
IF OBJECT_ID('ATIVIDADE', 'U') IS NOT NULL
	DROP TABLE ATIVIDADE
IF OBJECT_ID('SOLICITACAO_MATRICULA', 'U') IS NOT NULL
	DROP TABLE SOLICITACAO_MATRICULA
IF OBJECT_ID('DISCIPLINA_OFERTADA', 'U') IS NOT NULL
	DROP TABLE DISCIPLINA_OFERTADA
IF OBJECT_ID('CURSO', 'U') IS NOT NULL
	DROP TABLE CURSO
IF OBJECT_ID('DISCIPLINA', 'U') IS NOT NULL
	DROP TABLE DISCIPLINA
IF OBJECT_ID('PROFESSOR', 'U') IS NOT NULL
	DROP TABLE PROFESSOR
IF OBJECT_ID('ALUNO', 'U') IS NOT NULL
	DROP TABLE ALUNO
IF OBJECT_ID('COORDENADOR', 'U') IS NOT NULL
	DROP TABLE COORDENADOR
IF OBJECT_ID('USUARIO', 'U') IS NOT NULL
	DROP TABLE USUARIO
 
CREATE TABLE USUARIO(
	ID INT IDENTITY PRIMARY KEY,
	LOGIN VARCHAR(50) UNIQUE,
	SENHA VARCHAR(50) NOT NULL,
	DT_EXPIRACAO DATETIME DEFAULT ('1900-01-01')
);

CREATE TABLE COORDENADOR(
	ID INT IDENTITY PRIMARY KEY,
	ID_USUARIO INT FOREIGN KEY REFERENCES USUARIO(ID) NOT NULL,
	NOME VARCHAR(100) NOT NULL,
	EMAIL VARCHAR(100) UNIQUE NOT NULL,
	CELULAR VARCHAR(20) UNIQUE NOT NULL
);

CREATE TABLE ALUNO(
	ID INT IDENTITY PRIMARY KEY,
	ID_USUARIO INT FOREIGN KEY REFERENCES USUARIO(ID) NOT NULL,
	NOME VARCHAR(100) NOT NULL,
	EMAIL VARCHAR(100) UNIQUE NOT NULL,
	CELULAR VARCHAR(20) UNIQUE NOT NULL,
	RA VARCHAR(50) NOT NULL,
	FOTO VARCHAR(500)
);

CREATE TABLE PROFESSOR(
	ID INT IDENTITY PRIMARY KEY,
	ID_USUARIO INT FOREIGN KEY REFERENCES USUARIO(ID) NOT NULL,
	NOME VARCHAR(100) NOT NULL,
	EMAIL VARCHAR(100) UNIQUE NOT NULL,
	CELULAR VARCHAR(20) UNIQUE NOT NULL,
	APELIDO VARCHAR(50) NOT NULL
);

CREATE TABLE DISCIPLINA(
	ID INT IDENTITY PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL UNIQUE,
	DATA DATETIME NOT NULL DEFAULT (GETDATE()),
	STATUS VARCHAR(10) NOT NULL DEFAULT('ABERTA') CHECK( STATUS IN ('ABERTA', 'FECHADA') ),
	PLANO_DE_ENSINO VARCHAR(500) NOT NULL,
	CARGA_HORARIA INT NOT NULL CHECK( CARGA_HORARIA IN (40, 80) ),
	COMPETENCIAS VARCHAR(500) NOT NULL,
	HABILIDADES VARCHAR(500) NOT NULL,
	EMENTA VARCHAR(500) NOT NULL,
	CONTEUDO_PROGRAMATICO VARCHAR(500) NOT NULL,
	BIBLIOGRAFIA_BASICA VARCHAR(500) NOT NULL,
	BIBLIOGRAFIA_COMPLEMENTAR VARCHAR(500) NOT NULL,
	PERCENTUAL_PRATICO INT NOT NULL CHECK( PERCENTUAL_PRATICO >= 0 AND PERCENTUAL_PRATICO <= 100 ),
	PERCENTUAL_TEORICO INT NOT NULL CHECK( PERCENTUAL_TEORICO >= 0 AND PERCENTUAL_TEORICO <= 100 ),
	ID_COORDENADOR INT FOREIGN KEY REFERENCES COORDENADOR(ID) NOT NULL,
);

CREATE TABLE CURSO(
	ID INT IDENTITY PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE DISCIPLINA_OFERTADA(
	ID INT IDENTITY PRIMARY KEY,
	ID_COORDENADOR INT FOREIGN KEY REFERENCES COORDENADOR(ID) NOT NULL,
	DT_INICIO_MATRICULA DATETIME,
	DT_FIM_MATRICULA DATETIME,
	ID_DISCIPLINA INT FOREIGN KEY REFERENCES DISCIPLINA(ID) NOT NULL,
	ID_CURSO INT FOREIGN KEY REFERENCES CURSO(ID) NOT NULL,
	ANO INT NOT NULL CHECK( ANO >= 1900 AND ANO <= 2100 ),
	SEMESTRE INT NOT NULL CHECK( SEMESTRE IN (1, 2) ),
	TURMA VARCHAR(1) NOT NULL CHECK( TURMA LIKE ( '[A-Z]' ) ),
	ID_PROFESSOR INT FOREIGN KEY REFERENCES PROFESSOR(ID),
	METODOLOGIA VARCHAR(500),
	RECURSOS VARCHAR(500),
	CRITERIO_AVALIACAO VARCHAR(500),
	PLANO_DE_AULAS VARCHAR(500),
	CONSTRAINT UQ_OFERTA UNIQUE ( ID_CURSO, ANO, SEMESTRE, TURMA )
);

CREATE TABLE SOLICITACAO_MATRICULA(
	ID INT IDENTITY PRIMARY KEY,
	ID_ALUNO INT FOREIGN KEY REFERENCES ALUNO(ID) NOT NULL,
	ID_DISCIPLINA_OFERTADA INT FOREIGN KEY REFERENCES DISCIPLINA_OFERTADA(ID) NOT NULL,
	DT_SOLICITACAO DATETIME NOT NULL DEFAULT (GETDATE()),
	ID_COORDENADOR INT FOREIGN KEY REFERENCES COORDENADOR(ID),
	STATUS VARCHAR(20) DEFAULT('SOLICITADA') CHECK( STATUS IN ('SOLICITADA', 'APROVADA', 'REJEITADA', 'CANCELADA') )

);

CREATE TABLE ATIVIDADE(
	ID INT IDENTITY PRIMARY KEY,
	TITULO VARCHAR(100) NOT NULL UNIQUE,
	DESCRICAO VARCHAR(500),
	CONTEUDO VARCHAR(100) NOT NULL,
	TIPO VARCHAR(20) NOT NULL CHECK ( TIPO IN ('RESPOSTA ABERTA', 'TESTE') ),
	EXTRAS VARCHAR(100),
	ID_PROFESSOR INT FOREIGN KEY REFERENCES PROFESSOR(ID) NOT NULL,
);

CREATE TABLE ATIVIDADE_VINCULADA(
	ID INT IDENTITY PRIMARY KEY,
	ID_ATIVIDADE INT FOREIGN KEY REFERENCES ATIVIDADE(ID) NOT NULL,
	ID_PROFESSOR INT FOREIGN KEY REFERENCES PROFESSOR(ID) NOT NULL,
	ID_DISCIPLINA_OFERTADA INT FOREIGN KEY REFERENCES DISCIPLINA_OFERTADA(ID) NOT NULL,
	ROTULO VARCHAR(50) NOT NULL,
	STATUS VARCHAR(50) NOT NULL CHECK( STATUS IN ('DISPONIBILIZADA','ABERTA','FECHADA','ENCERRADA','PRORROGADA') ),
	CONSTRAINT UQ_ATIVIDADE UNIQUE ( ID_ATIVIDADE, ID_DISCIPLINA_OFERTADA, ROTULO )
);

CREATE TABLE ENTREGA(
	ID INT IDENTITY PRIMARY KEY,
	ID_ALUNO INT FOREIGN KEY REFERENCES ALUNO(ID) NOT NULL,
	ID_ATIVIDADE_VINCULADA INT FOREIGN KEY REFERENCES ATIVIDADE_VINCULADA(ID) NOT NULL,
	TITULO VARCHAR(50) NOT NULL,
	RESPOSTA VARCHAR(500) NOT NULL,
	DT_ENTREGA DATETIME NOT NULL DEFAULT (GETDATE()),
	STATUS VARCHAR(50) NOT NULL DEFAULT('ENTREGUE') CHECK( STATUS IN ('ENTREGUE','CORRIGIDO') ),
	ID_PROFESSOR INT FOREIGN KEY REFERENCES PROFESSOR(ID),
	NOTA DECIMAL(4,2) CHECK( NOTA >= 0 AND NOTA <= 10 ),
	DT_AVALIACAO DATETIME,
	OBS VARCHAR(500),
	CONSTRAINT UQ_ENTREGA UNIQUE ( ID_ALUNO, ID_ATIVIDADE_VINCULADA )
);

CREATE TABLE MENSAGEM(
	ID INT IDENTITY PRIMARY KEY,
	ID_ALUNO INT FOREIGN KEY REFERENCES ALUNO(ID) NOT NULL,
	ID_PROFESSOR INT FOREIGN KEY REFERENCES PROFESSOR(ID) NOT NULL,
	ASSUNTO VARCHAR(50) NOT NULL,
	REFERENCIA VARCHAR(50) NOT NULL,
	CONTEUDO VARCHAR(500) NOT NULL,
	STATUS VARCHAR(50) NOT NULL DEFAULT('ENVIADO') CHECK( STATUS IN ('ENVIADO','LIDO', 'RESPONDIDO') ),
	DT_ENVIO DATETIME NOT NULL DEFAULT (GETDATE()),
	DT_REPOSTA DATETIME,
	RESPOSTA VARCHAR(500)
);